#!/usr/bin/perl

use FindBin;
use lib "$FindBin::Bin/../lib/perl-lib/lib/perl5";
use lib "$FindBin::Bin/../lib";

use strict;
use Getopt::Long;
use File::Basename;

our $pname = basename($0);

sub usage {
    print("Usage: $pname [--prefix <prefix>] [--backupdir <backupdir>] [--excludes <exclude pattern>] <target1 target2...> \n");
    print("        prefix: prefix name of archive \n");
    print("        backupdir: backup path \n");
    print("        excludes: exclude files, given as a pattern \n");

    exit(1);
}

sub main {
    my ( $prefix, $backupDir, $rollbackDir, $excludes, @targetFiles );
    GetOptions(
        'prefix:s'      => \$prefix,
        'backupdir:s'   => \$backupDir,
        'rollbackdir:s' => \$rollbackDir,
        'excludes:s'    => \$excludes,
        '<>'            => sub { my $item = shift(@_); push( @targetFiles, $item ); }
    );

    if ( not defined($prefix) or scalar(@targetFiles) eq 0 ) {
    	print("ERROR: Please input backup target parameters. \n");
    	usage();
    }
   
    if (not defined($backupDir) ) {
        $backupDir = "\$HOME/oldcx";
    }

    if (not defined($rollbackDir) ) {
        $rollbackDir = "\$HOME";
    }
   
    # 拼装排除文件或目录
    my $excludeParams = "";
    my @excludes = split(/\s+/, $excludes);
    foreach my $exclude (@excludes){
        $excludeParams = $excludeParams . " --exclude=" . $exclude;
    }
   
    # 拼装备份目标 
    my $targetPaths;
    foreach my $targetPath (@targetFiles){
        $targetPaths = $targetPaths . " " . $targetPath;
    }
   
    # 备份
    my $cmd = "cd $rollbackDir && tar $excludeParams -cvf $prefix" . "_\$(date +%Y%m%d%H%M%S).tar $targetPaths && currentTime=\$(date +%Y%m%d%H%M%S) && mkdir -p $backupDir/${prefix}_\$currentTime && cd $backupDir/${prefix}_\$currentTime && mv $rollbackDir/$prefix" . "_*.tar .";
    my $ret = system($cmd);
    
    if ($ret eq 0) {
    	print("INFO: Backup success.");
    }else {
    	print("ERROR: Backup failure.");	
    	exit(1);
    }
   
}

main();
